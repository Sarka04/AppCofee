/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sist_gest_cafe;

import DAO.categoriaDAO;
import DAO.productoDAO;
import DAO.reciboDAO;
import com.itextpdf.text.Element;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import comun.openPDF;
import java.io.File;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import modelo.Categoria;
import modelo.Producto;
import modelo.Recibo;

/**
 *
 * @author Marcos Maria Sicilia
 */
public class hacerPedido extends javax.swing.JFrame {

    public String emailUsuario;
    public int reciboID = 1;
    public double granTotal = 0;
    public double productoPrecio = 0.0;
    public double productoTotal = 0.0;
    public String emailPatron = "^[a-zA-Z0-9]+[@]+[a-zA-Z0-9]+[.]+[a-zA-Z0-9]+$";
    public String telefonoPatron = "^[0-9]*$";

    /**
     * Creates new form hacerPedido
     */
    public hacerPedido() {
        initComponents();
        jTextFieldProdNombre.setEditable(false);
        jTextFieldProdPrecio.setEditable(false);
        jTextFieldProdTotal.setEditable(false);
    }

    public hacerPedido(String email) {
        initComponents();
        jTextFieldProdNombre.setEditable(false);
        jTextFieldProdPrecio.setEditable(false);
        jTextFieldProdTotal.setEditable(false);
        jButtonAñadirCarro.setEnabled(false);
        jButtonGenerarRecibo.setEnabled(false);
        JFormattedTextField tf = ((JSpinner.DefaultEditor) jSpinner.getEditor()).getTextField();
        tf.setEditable(false);
        emailUsuario = email;
    }

    public void productoNombrePorCategoria(String categoria) {

        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setRowCount(0);
        ArrayList<Producto> lista = productoDAO.getDatosPorCategoria(categoria);
        Iterator<Producto> itr = lista.iterator();
        while (itr.hasNext()) {

            Producto productoObj = itr.next();
            modelo.addRow(new Object[]{productoObj.getNombre()});
        }
    }

    public void filtrarPorNombre(String nombre, String categoria) {

        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setRowCount(0);
        ArrayList<Producto> lista = productoDAO.filtroProductoPorNombre(nombre, categoria);
        Iterator<Producto> itr = lista.iterator();
        while (itr.hasNext()) {
            Producto productoObj = itr.next();
            modelo.addRow(new Object[]{productoObj.getNombre()});
        }
    }

    public void limpiar() {

        jTextFieldProdNombre.setText("");
        jTextFieldProdPrecio.setText("");
        jSpinner.setValue(0);
        jTextFieldProdTotal.setText("");
        jTextFieldProdNombre.setEditable(false);
        jButtonAñadirCarro.setEnabled(false);
    }

    public void validarCampos() {
        String telefonoCliente = jTextFieldTelefono.getText();
        String emailCliente = jTextFieldEmail.getText();

        if (!emailCliente.isEmpty() && emailCliente.matches(emailPatron)
                && telefonoCliente.matches(telefonoPatron) && telefonoCliente.length() == 9) {
            jButtonGenerarRecibo.setEnabled(true);
        } else {
            jButtonGenerarRecibo.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelID = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldTelefono = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jComboBox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldBuscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldProdNombre = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldProdPrecio = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jSpinner = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldProdTotal = new javax.swing.JTextField();
        jButtonLimpiar = new javax.swing.JButton();
        jButtonAñadirCarro = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jButtonGenerarRecibo = new javax.swing.JButton();
        jLabelGranTotal = new javax.swing.JLabel();
        jLabelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/close.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1430, 16, 51, 56));

        jLabel1.setFont(new java.awt.Font("Bahnschrift", 0, 24)); // NOI18N
        jLabel1.setText("Hacer Pedido:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 16, -1, -1));

        jLabel2.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel2.setText("Nº RECIBO:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 119, -1, -1));

        jLabelID.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabelID.setText("--");
        getContentPane().add(jLabelID, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 119, -1, -1));

        jLabel4.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel4.setText("Nombre:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 160, -1, -1));

        jTextFieldNombre.setFont(new java.awt.Font("Bahnschrift", 0, 16)); // NOI18N
        jTextFieldNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNombreKeyReleased(evt);
            }
        });
        getContentPane().add(jTextFieldNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 201, 300, -1));

        jLabel5.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel5.setText("Teléfono:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 248, -1, -1));

        jTextFieldTelefono.setFont(new java.awt.Font("Bahnschrift", 0, 16)); // NOI18N
        jTextFieldTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldTelefonoKeyReleased(evt);
            }
        });
        getContentPane().add(jTextFieldTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 289, 300, -1));

        jLabel6.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel6.setText("E-mail:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 336, -1, -1));

        jTextFieldEmail.setFont(new java.awt.Font("Bahnschrift", 0, 16)); // NOI18N
        jTextFieldEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldEmailKeyReleased(evt);
            }
        });
        getContentPane().add(jTextFieldEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 377, 300, -1));

        jLabel7.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel7.setText("Categoría:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 424, -1, -1));

        jComboBox.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 465, 300, -1));

        jLabel8.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel8.setText("Buscar el producto por categoría:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(332, 160, -1, -1));

        jTextFieldBuscar.setFont(new java.awt.Font("Bahnschrift", 0, 16)); // NOI18N
        jTextFieldBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldBuscarKeyReleased(evt);
            }
        });
        getContentPane().add(jTextFieldBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(332, 201, 300, -1));

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(332, 289, -1, 493));

        jLabel3.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel3.setText("Nombre:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(802, 119, -1, -1));

        jTextFieldProdNombre.setFont(new java.awt.Font("Bahnschrift", 0, 16)); // NOI18N
        getContentPane().add(jTextFieldProdNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(802, 160, 300, -1));

        jLabel9.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel9.setText("Precio:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1181, 119, -1, -1));

        jTextFieldProdPrecio.setFont(new java.awt.Font("Bahnschrift", 0, 16)); // NOI18N
        getContentPane().add(jTextFieldProdPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(1181, 160, 300, -1));

        jLabel10.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel10.setText("Cantidad:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(802, 207, -1, -1));

        jSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerStateChanged(evt);
            }
        });
        getContentPane().add(jSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(802, 248, 300, -1));

        jLabel11.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel11.setText("Total:");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1181, 207, -1, -1));

        jTextFieldProdTotal.setFont(new java.awt.Font("Bahnschrift", 0, 16)); // NOI18N
        getContentPane().add(jTextFieldProdTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(1181, 248, 300, -1));

        jButtonLimpiar.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jButtonLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/clear.png"))); // NOI18N
        jButtonLimpiar.setText("Limpiar");
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(802, 305, -1, -1));

        jButtonAñadirCarro.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jButtonAñadirCarro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/add to cart.png"))); // NOI18N
        jButtonAñadirCarro.setText("Añadir al carrito");
        jButtonAñadirCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAñadirCarroActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonAñadirCarro, new org.netbeans.lib.awtextra.AbsoluteConstraints(1296, 305, -1, -1));

        jTable2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Precio", "Cantidad", "Total"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(802, 355, 679, 372));

        jLabel12.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabel12.setText("Gran Total:");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1137, 755, -1, -1));

        jButtonGenerarRecibo.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jButtonGenerarRecibo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/generate bill & print.png"))); // NOI18N
        jButtonGenerarRecibo.setText("Generar Recibo");
        jButtonGenerarRecibo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerarReciboActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonGenerarRecibo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1303, 752, -1, -1));

        jLabelGranTotal.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        jLabelGranTotal.setText("000");
        getContentPane().add(jLabelGranTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(1242, 755, 43, -1));

        jLabelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ImagenRegistro2.png"))); // NOI18N
        jLabelFondo.setText("jLabel14");
        getContentPane().add(jLabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

        reciboID = Integer.parseInt(reciboDAO.getId());
        jLabelID.setText(reciboDAO.getId());
        ArrayList<Categoria> lista = categoriaDAO.getDatos();
        Iterator<Categoria> itr = lista.iterator();
        while (itr.hasNext()) {

            Categoria categoriaObj = itr.next();
            jComboBox.addItem(categoriaObj.getNombre());
        }
        String categoria = (String) jComboBox.getSelectedItem();
        productoNombrePorCategoria(categoria);
    }//GEN-LAST:event_formComponentShown

    private void jTextFieldBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscarKeyReleased

        String nombre = jTextFieldBuscar.getText();
        String categoria = (String) jComboBox.getSelectedItem();
        ArrayList<Producto> lista = productoDAO.filtroProductoPorNombre(nombre, categoria);

        // Crear un nuevo DefaultTableModel
        DefaultTableModel modelo = new DefaultTableModel();

        // Agregar una columna "Nombre" al modelo de tabla
        modelo.addColumn("Nombre");

        // Recorrer la lista de productos y agregar cada nombre como una fila en el modelo de tabla
        for (Producto producto : lista) {
            Object[] fila = {producto.getNombre()}; // Crear un arreglo con el nombre del producto
            modelo.addRow(fila); // Agregar la fila al modelo de tabla
        }

        // Asignar el modelo de tabla al jTable1 para mostrar los resultados
        jTable1.setModel(modelo);

    }//GEN-LAST:event_jTextFieldBuscarKeyReleased

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        int indice = jTable1.getSelectedRow();
        TableModel modelo = jTable1.getModel();
        String nombreProducto = modelo.getValueAt(indice, 0).toString();
        Producto producto = productoDAO.getProductoPorNombre(nombreProducto);
        jTextFieldProdNombre.setText(producto.getNombre());
        jTextFieldProdPrecio.setText(producto.getPrecio());
        jSpinner.setValue(1);
        jTextFieldProdTotal.setText(producto.getPrecio());
        productoPrecio = Double.parseDouble(producto.getPrecio());
        productoTotal = Double.parseDouble(producto.getPrecio());
        jButtonAñadirCarro.setEnabled(true);

    }//GEN-LAST:event_jTable1MouseClicked

    private void jSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerStateChanged

        int cantidad = (Integer) jSpinner.getValue();
        if (cantidad <= 1) {

            jSpinner.setValue(1);
            cantidad = 1;
        }
        productoTotal = productoPrecio * cantidad;
        jTextFieldProdTotal.setText(String.valueOf(productoTotal));
    }//GEN-LAST:event_jSpinnerStateChanged

    private void jComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxActionPerformed

        String categoria = (String) jComboBox.getSelectedItem();
        productoNombrePorCategoria(categoria);
    }//GEN-LAST:event_jComboBoxActionPerformed

    private void jButtonAñadirCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAñadirCarroActionPerformed

        String nombre = jTextFieldProdNombre.getText();
        String precio = jTextFieldProdPrecio.getText();
        String cantidad = String.valueOf(jSpinner.getValue());
        DefaultTableModel modelo = (DefaultTableModel) jTable2.getModel();
        modelo.addRow(new Object[]{nombre, precio, cantidad, productoTotal});
        granTotal = granTotal + productoTotal;
        jLabelGranTotal.setText(String.valueOf(granTotal));

        //limpiar();
        validarCampos();
    }//GEN-LAST:event_jButtonAñadirCarroActionPerformed

    private void jTextFieldNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNombreKeyReleased
        validarCampos();
    }//GEN-LAST:event_jTextFieldNombreKeyReleased

    private void jTextFieldTelefonoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTelefonoKeyReleased
        validarCampos();
    }//GEN-LAST:event_jTextFieldTelefonoKeyReleased

    private void jTextFieldEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEmailKeyReleased
        validarCampos();
    }//GEN-LAST:event_jTextFieldEmailKeyReleased

    private void jButtonGenerarReciboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerarReciboActionPerformed

        TableModel modelo = jTable2.getModel();
        if (modelo.getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Inserte mínimo un producto para poder crear el recibo.");
        } 
        else
        {       
        String nombreCliente = jTextFieldNombre.getText();
        String telefonoCliente = jTextFieldTelefono.getText();
        String emailCliente = jTextFieldEmail.getText();
        SimpleDateFormat dFormat = new SimpleDateFormat("dd-MM-yyyy");
        Date fecha = new Date();
        String fechaHoy = dFormat.format(fecha);
        String total = String.valueOf(granTotal);
        String autor = emailUsuario;
        Recibo recibo = new Recibo();
        recibo.setId(reciboID);
        recibo.setNombre(nombreCliente);
        recibo.setTelefono(telefonoCliente);
        recibo.setEmail(emailCliente);
        recibo.setFecha(fechaHoy);
        recibo.setTotal(total);
        recibo.setAutor(autor);
        reciboDAO.guardar(recibo);

        //DOCUMENTO PDF
        //String rutaEscritorio = System.getProperty("user.home") + File.separator + "Desktop";
        String ruta = "pdfs";

        com.itextpdf.text.Document documento = new com.itextpdf.text.Document();
        try {

            PdfWriter.getInstance(documento, new FileOutputStream(ruta + File.separator + reciboID + ".pdf"));
            documento.open();

            Paragraph nombreCafeteria = new Paragraph("SISTEMA GESTIÓN == CAFES MDM\n\n");
            nombreCafeteria.setAlignment(Element.ALIGN_CENTER);
            documento.add(nombreCafeteria);

            Paragraph lineaInicio = new Paragraph("***********************************************************************************************************\n\n");
            documento.add(lineaInicio);

            Paragraph lineaContinua = new Paragraph("RECIBO ID: " + reciboID + "\n\n");
            lineaContinua.setAlignment(Element.ALIGN_CENTER);
            documento.add(lineaContinua);

            Paragraph datosCliente = new Paragraph("Cliente: " + nombreCliente + "\nTotal Pagado: " + granTotal + "\n\n");
            documento.add(datosCliente);
            PdfPTable tabla1 = new PdfPTable(4);
            tabla1.addCell("Nombre");
            tabla1.addCell("precio");
            tabla1.addCell("Cantidad");
            tabla1.addCell("Total");
            for (int i = 0; i < jTable2.getRowCount(); i++) {

                String nmbrTabla = jTable2.getValueAt(i, 0).toString();
                String drcTabla = jTable2.getValueAt(i, 1).toString(); // Corregido
                String tTabla = jTable2.getValueAt(i, 2).toString(); // Corregido
                String cntTabla = jTable2.getValueAt(i, 3).toString(); // Corregido
                tabla1.addCell(nmbrTabla);
                tabla1.addCell(drcTabla);
                tabla1.addCell(tTabla);
                tabla1.addCell(cntTabla);
            }
            documento.add(tabla1);
            documento.add(lineaInicio);
            Paragraph mensaje = new Paragraph("Gracias. ¡Por favor visitenos pronto!");
            documento.add(mensaje);

            //ABRIR DOCUMENTO PDF
            openPDF.abrirPorId(String.valueOf(reciboID));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        documento.close();
        setVisible(false);
        new hacerPedido(autor).setVisible(true);
        }
    }//GEN-LAST:event_jButtonGenerarReciboActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked

        int indice = jTable2.getSelectedRow();
        int a = JOptionPane.showConfirmDialog(null, "¿Desea borrar este producto?", "SELECCION", JOptionPane.YES_NO_OPTION);
        if (a == 0) {

            TableModel modelo = jTable2.getModel();
            double total = Double.parseDouble(modelo.getValueAt(indice, 3).toString());
            granTotal -= total;
            jLabelGranTotal.setText(String.valueOf(granTotal));
            ((DefaultTableModel) jTable2.getModel()).removeRow(indice);

        }
    }//GEN-LAST:event_jTable2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(hacerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(hacerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(hacerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hacerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hacerPedido().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAñadirCarro;
    private javax.swing.JButton jButtonGenerarRecibo;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JComboBox<String> jComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelFondo;
    private javax.swing.JLabel jLabelGranTotal;
    private javax.swing.JLabel jLabelID;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextFieldBuscar;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldProdNombre;
    private javax.swing.JTextField jTextFieldProdPrecio;
    private javax.swing.JTextField jTextFieldProdTotal;
    private javax.swing.JTextField jTextFieldTelefono;
    // End of variables declaration//GEN-END:variables
}
